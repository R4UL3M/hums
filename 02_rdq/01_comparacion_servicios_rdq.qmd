---
title: "Registro de Demanda Quirúrgica"
subtitle: "Hospital Universitario Miguel Servet"
date: last-modified
format: html

---

## Set-up

- Creación del entorno de trabajo: activación de librerías, diseño de variables globales y construcción de métodos. 

```{r}
#| echo: true
#| code-fold: true

library(tidyverse)
library(readxl)
library(DT)
library(htmltools)

meses <- c("ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic")
ultimos_dias <- c("31", "28", "31", "30", "31", "30", "31", "31", "30", "31", "30", "31")

path <- "data.xls"

crear_fecha <- function(mes, anio) {
  mes_num <- match(mes, meses)
  ultimo_dia <- ultimos_dias[mes_num]
  fecha <- paste0(ultimo_dia, "/", sprintf("%02d", mes_num), "/", "20", anio)
  return(dmy(fecha))
}

rdq_servicios <- function(path = path, rango, servicio){
  df <- read_excel(path = path, range= rango,
                    col_names = c("indicador", 
                                  paste0(meses[9:12], "_", 23), 
                                  paste0(meses[1:8], "_", 24))) %>%
    mutate(servicio = servicio)
  
  df
}


```


<br>

## Conjunto de Datos

- Diseño del conjunto de datos: formato largo y unificación de tablas por servicios. 

```{r}
#| echo: true
#| code-fold: true

acv_rdq <- rdq_servicios(path = path, rango = "A2:M12", servicio = "ACV")
cca_rdq <- rdq_servicios(path = path, rango ="A15:M25", servicio = "CCA")
cgd_rdq <- rdq_servicios(path = path, rango ="A28:M38", servicio = "CGD")
com_rdq <- rdq_servicios(path = path, rango ="A41:M51", servicio = "COM")
cpe_rdq <- rdq_servicios(path = path, rango ="A54:M64", servicio = "CPE")
cpl_rdq <- rdq_servicios(path = path, rango ="A67:M77", servicio = "CPL")
cto_rdq <- rdq_servicios(path = path, rango ="A80:M90", servicio = "CTO")
der_rdq <- rdq_servicios(path = path, rango ="A93:M103", servicio = "DER")
gin_rdq <- rdq_servicios(path = path, rango ="A106:M116", servicio = "GIN")
nrc_rdq <- rdq_servicios(path = path, rango ="A119:M129", servicio = "NRC")
obs_rdq <- rdq_servicios(path = path, rango ="A132:M142", servicio = "OBS")
oft_rdq <- rdq_servicios(path = path, rango ="A145:M155", servicio = "OFT")
orl_rdq <- rdq_servicios(path = path, rango ="A158:M168", servicio = "ORL")
tra_rdq <- rdq_servicios(path = path, rango ="A171:M181", servicio = "TRA")
uro_rdq <- rdq_servicios(path = path, rango ="A184:M194", servicio = "URO")

hums <- rbind(acv_rdq, cca_rdq, cgd_rdq, com_rdq, cpe_rdq, cpl_rdq, 
              cto_rdq, der_rdq, gin_rdq, nrc_rdq, obs_rdq, oft_rdq, orl_rdq, tra_rdq, uro_rdq)

cols_con_guion <- grep("_", names(hums), value = TRUE)

hums_long <- pivot_longer(data = hums, cols = all_of(cols_con_guion), names_to = "mes_anio", values_to = "valor")

hums_long <- hums_long %>% 
  mutate(mes = substr(mes_anio, 1, 3),
         anio = substr(mes_anio, 5,6)
         ) %>%
  mutate(fecha = as.Date(mapply(crear_fecha, mes, anio))) %>%
  mutate(anio = year(fecha),
         mes = month(fecha))


hums_long %>% select(indicador, servicio, mes, anio, fecha, valor) %>% DT::datatable()

```

<br>

## Total Entradas 

```{r}

hums_long %>% filter(indicador == "Total Entradas") %>%
  ggplot(aes(x=fecha, y=valor)) +
  geom_col(fill="brown")+
  facet_wrap(~ servicio, ncol = 5)+
  theme(
    axis.text.x = element_text(angle=90)
  )+
  labs(y="Total Entradas\n", x = "\n Fecha")
```

<br>

## Total Salidas


```{r}

hums_long %>% filter(indicador == "Total Salidas") %>%
  ggplot(aes(x=fecha, y=valor)) +
  geom_col(fill="green")+
  facet_wrap(~ servicio, ncol = 5)+
  theme(
    axis.text.x = element_text(angle=90)
  )+
  labs(y="Total Salidas\n", x = "\n Fecha")

```

<br>

### Según Tipo de Jornada

:::panel-tabset

#### Ordinadaria

```{r}


hums_long %>% filter(indicador == "Salidas jornada ordinaria") %>%
  ggplot(aes(x=fecha, y=valor)) +
  geom_col(fill="orchid4")+
  facet_wrap(~ servicio, ncol = 5)+
  theme(
    axis.text.x = element_text(angle=90)
  )+
  labs(y="Salidas J. Ordinaria\n", x = "\n Fecha")


```


#### NO Ordinadaria

```{r}



hums_long %>% filter(indicador %in% c("Total Salidas", "Salidas jornada ordinaria")) %>%
  group_by(servicio, fecha) %>% 
  pivot_wider(id_cols = c("servicio", "fecha"), names_from = "indicador", values_from = "valor") %>% 
  summarise(
  `Salidas jornada NO ordinaria` = `Total Salidas` - `Salidas jornada ordinaria`) %>%
  ggplot(aes(x=fecha, y=`Salidas jornada NO ordinaria`)) +
  geom_col(fill="orchid1")+
  facet_wrap(~ servicio, ncol = 5)+
  theme(
    axis.text.x = element_text(angle=90)
  )+
  labs(y="Salidas Jornada NO Ordinaria\n", x = "\n Fecha")


```


:::



### Según Tipo de Cirugía


:::panel-tabset

#### Con Ingreso


```{r}

hums_long %>% filter(indicador == "C. con ingreso") %>%
  ggplot(aes(x=fecha, y=valor)) +
  geom_col(fill="darkgoldenrod4")+
  facet_wrap(~ servicio, ncol = 5)+
  theme(
    axis.text.x = element_text(angle=90)
  )+
  labs(y="Salidas J. Ordinaria\n", x = "\n Fecha")

```


#### CMA


```{r}

hums_long %>% filter(indicador == "C. mayor ambulatoria") %>%
  ggplot(aes(x=fecha, y=valor)) +
  geom_col(fill="darkgoldenrod3")+
  facet_wrap(~ servicio, ncol = 5)+
  theme(
    axis.text.x = element_text(angle=90)
  )+
  labs(y="Salidas J. Ordinaria\n", x = "\n Fecha")

```

#### Ambulante


```{r}

hums_long %>% filter(indicador == "C. ambulante") %>%
  ggplot(aes(x=fecha, y=valor)) +
  geom_col(fill="darkgoldenrod2")+
  facet_wrap(~ servicio, ncol = 5)+
  theme(
    axis.text.x = element_text(angle=90)
  )+
  labs(y="Salidas J. Ordinaria\n", x = "\n Fecha")

```

:::

<br>

## Total Entradas vs Salidas


```{r}

hums_long %>% filter(indicador == "Total Entradas" | indicador == "Total Salidas") %>% 
  group_by(servicio, fecha) %>% 
  pivot_wider(id_cols = c("servicio", "fecha"), names_from = "indicador", values_from = "valor") %>%
  ggplot(aes(x=fecha)) +
  geom_col(aes(y=`Total Entradas`), fill = "brown")+
  geom_col(aes(y= - `Total Salidas`), fill = "green")+
  facet_wrap(~servicio, ncol = 5)+
  theme(
    axis.text.x = element_text(angle=90)
  )+
  labs(x = "\n Fecha", y="Entradas vs Salidas\n")

```




```{r}


hums_long %>% filter(indicador == "Total Entradas" | indicador == "Total Salidas") %>% 
  group_by(servicio, fecha) %>% 
  pivot_wider(id_cols = c("servicio", "fecha"), names_from = "indicador", values_from = "valor") %>%
  mutate(dif = `Total Entradas`- `Total Salidas`,
         signo = if_else(dif >0, "Positivo", "Negativo")) %>%
  ggplot(aes(x=fecha, y=dif, color = signo)) +
  geom_point()+
  geom_segment(aes(yend=dif, y = 0))+
  scale_color_manual(values = c("black", "red"))+
  facet_wrap(~servicio, ncol = 5) +
   theme(
    axis.text.x = element_text(angle=90),
    legend.position = "top"
  )+
  labs(x = "\n Fecha", y="Entradas - Salidas\n", color = "Entradas - Salidas")


```


<br>

## Total Activos en Espera

```{r}

hums_long %>% filter(indicador == "Activos en espera") %>% 
  ggplot(aes(x=fecha, y= valor)) +
  geom_col(fill = "hotpink4") +
  facet_wrap(~servicio, ncol=5)+
  theme(axis.text.x = element_text(angle=90))+
  labs(y="Pacientes\n", x="\nFecha")

```

:::panel-tabset

### > 6 Meses Estructural


```{r}

hums_long %>% filter(indicador == "> 6 meses estructural") %>% 
  ggplot(aes(x=fecha, y= valor)) +
  geom_col(fill = "hotpink3") +
  facet_wrap(~servicio, ncol=5)+
  theme(axis.text.x = element_text(angle=90))+
  labs(y="Pacientes\n", x="\nFecha")


```




### > 6 Meses 


```{r}

hums_long %>% filter(indicador == "> 6 meses") %>% 
  ggplot(aes(x=fecha, y= valor)) +
  geom_col(fill = "hotpink1") +
  facet_wrap(~servicio, ncol=5)+
  theme(axis.text.x = element_text(angle=90))+
  labs(y="Pacientes\n", x="\nFecha")


```



### Garantía Superada

```{r}

hums_long %>% filter(indicador == "Pacientes garantia superada") %>% 
  ggplot(aes(x=fecha, y= valor)) +
  geom_col(fill = "hotpink1") +
  facet_wrap(~servicio, ncol=5)+
  theme(axis.text.x = element_text(angle=90))+
  labs(y="Pacientes\n", x="\nFecha")


```

:::


<br>

## Demora Media

```{r}

hums_long %>% filter(indicador == "Demora media activos") %>% 
  ggplot(aes(x=fecha, y= valor)) +
  geom_col(fill = "royalblue2") +
  facet_wrap(~servicio, ncol=5)+
  theme(axis.text.x = element_text(angle=90))+
  labs(y="Días\n", x="\nFecha")

```

```{r}

saveRDS(object = hums_long ,file = "hums_long.RDS")

```

